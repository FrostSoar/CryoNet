{"includedArchiveIdentifiers":["cryonet.CryoNet"],"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/cryonet\/cryonet\/asyncsemaphore\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/cryonet\/cryonet\/asyncsemaphore\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/cryonet\/cryonet\/asyncsemaphore\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/cryonet\/cryonet\/asyncsemaphore\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/cryonet\/cryonet\/asyncsemaphore","title":"CryoNet.AsyncSemaphore","type":"class"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/cryonet\/cryonet\/init(configuration:)","title":"init(configuration: CryoNetConfiguration)","type":"init"},{"path":"\/documentation\/cryonet\/cryonet\/init(configurator:)","title":"init(configurator: (inout CryoNetConfiguration) -> Void)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/cryonet\/cryonet\/downloadfile(_:progress:result:)","title":"func downloadFile(DownloadModel, progress: (DownloadItem) -> Void, result: (DownloadResult) -> Void) async","type":"method"},{"path":"\/documentation\/cryonet\/cryonet\/getconfiguration()","title":"func getConfiguration() -> CryoNetConfiguration","type":"method"},{"path":"\/documentation\/cryonet\/cryonet\/getcurrentinterceptorinfo()","title":"func getCurrentInterceptorInfo() -> String","type":"method"},{"path":"\/documentation\/cryonet\/cryonet\/request(_:parameters:headers:interceptor:)","title":"func request(RequestModel, parameters: [String : Any]?, headers: [HTTPHeader], interceptor: RequestInterceptorProtocol?) -> CryoResult","type":"method"},{"path":"\/documentation\/cryonet\/cryonet\/streamrequest(_:parameters:headers:interceptor:)","title":"func streamRequest(RequestModel, parameters: [String : Any]?, headers: [HTTPHeader], interceptor: RequestInterceptorProtocol?) -> CryoStreamResult","type":"method"},{"path":"\/documentation\/cryonet\/cryonet\/upload(_:files:parameters:headers:interceptor:)","title":"func upload(RequestModel, files: [UploadData], parameters: [String : Any], headers: [HTTPHeader], interceptor: RequestInterceptorProtocol?) -> CryoResult","type":"method"},{"path":"\/documentation\/cryonet\/cryonet\/validateinterceptorconfiguration()","title":"func validateInterceptorConfiguration() -> (isValid: Bool, message: String)","type":"method"}],"path":"\/documentation\/cryonet\/cryonet","title":"CryoNet","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/cryonet\/cryostreamcontroller\/init(streamresult:)","title":"init(streamResult: CryoStreamResult)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/cryonet\/cryostreamcontroller\/isactive","title":"var isActive: Bool","type":"property"},{"path":"\/documentation\/cryonet\/cryostreamcontroller\/streamresult","title":"let streamResult: CryoStreamResult","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/cryonet\/cryostreamcontroller\/startdatastream(ondata:)","title":"func startDataStream(onData: (Data) -> Bool)","type":"method"},{"path":"\/documentation\/cryonet\/cryostreamcontroller\/startdecodablestream(_:onmodel:)","title":"func startDecodableStream<T>(T.Type, onModel: (T) -> Bool)","type":"method"},{"path":"\/documentation\/cryonet\/cryostreamcontroller\/startjsonstream(onjson:)","title":"func startJSONStream(onJSON: (JSON) -> Bool)","type":"method"},{"path":"\/documentation\/cryonet\/cryostreamcontroller\/startssestream(onevent:)","title":"func startSSEStream(onEvent: (String) -> Bool)","type":"method"},{"path":"\/documentation\/cryonet\/cryostreamcontroller\/stop()","title":"func stop()","type":"method"}],"path":"\/documentation\/cryonet\/cryostreamcontroller","title":"CryoStreamController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/cryonet\/cryostreamresult\/init(request:)","title":"init(request: DataStreamRequest)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/cryonet\/cryostreamresult\/request","title":"let request: DataStreamRequest","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/cryonet\/cryostreamresult\/asstreamdataitems()","title":"func asStreamDataItems() -> AsyncThrowingStream<StreamDataItem, Error>","type":"method"},{"path":"\/documentation\/cryonet\/cryostreamresult\/autodecodablestream(_:decoder:)","title":"func autoDecodableStream<T>(T.Type, decoder: JSONDecoder) -> AsyncThrowingStream<T, Error>","type":"method"},{"path":"\/documentation\/cryonet\/cryostreamresult\/automodelstream(_:)","title":"func autoModelStream<T>(T.Type) -> AsyncThrowingStream<T, Error>","type":"method"},{"path":"\/documentation\/cryonet\/cryostreamresult\/cancel()","title":"func cancel()","type":"method"},{"path":"\/documentation\/cryonet\/cryostreamresult\/datastream()","title":"func dataStream() -> AsyncThrowingStream<Data, Error>","type":"method"},{"path":"\/documentation\/cryonet\/cryostreamresult\/decodablestream(_:decoder:)","title":"func decodableStream<T>(T.Type, decoder: JSONDecoder) -> AsyncThrowingStream<T, Error>","type":"method"},{"path":"\/documentation\/cryonet\/cryostreamresult\/enabledebuglogging()","title":"func enableDebugLogging() -> Self","type":"method"},{"path":"\/documentation\/cryonet\/cryostreamresult\/jsonstream()","title":"func jsonStream() -> AsyncThrowingStream<JSON, Error>","type":"method"},{"path":"\/documentation\/cryonet\/cryostreamresult\/linedelimiteddecodablestream(_:decoder:)","title":"func lineDelimitedDecodableStream<T>(T.Type, decoder: JSONDecoder) -> AsyncThrowingStream<T, Error>","type":"method"},{"path":"\/documentation\/cryonet\/cryostreamresult\/modelstream(_:)","title":"func modelStream<T>(T.Type) -> AsyncThrowingStream<T, Error>","type":"method"},{"path":"\/documentation\/cryonet\/cryostreamresult\/ssedecodablestream(_:decoder:)","title":"func sseDecodableStream<T>(T.Type, decoder: JSONDecoder) -> AsyncThrowingStream<T, Error>","type":"method"},{"path":"\/documentation\/cryonet\/cryostreamresult\/ssemodelstream(_:)","title":"func sseModelStream<T>(T.Type) -> AsyncThrowingStream<T, Error>","type":"method"},{"path":"\/documentation\/cryonet\/cryostreamresult\/ssestream()","title":"func sseStream() -> AsyncThrowingStream<String, Error>","type":"method"}],"path":"\/documentation\/cryonet\/cryostreamresult","title":"CryoStreamResult","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/cryonet\/defaultinterceptor\/init(responseconfig:)","title":"init(responseConfig: ResponseStructureConfig)","type":"init"},{"path":"\/documentation\/cryonet\/defaultinterceptor\/init(successcode:successdatakey:)","title":"init(successCode: Int, successDataKey: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/cryonet\/defaultinterceptor\/extractsuccessdata(from:data:)","title":"func extractSuccessData(from: JSON, data: Data) -> Result<Data, Error>","type":"method"},{"path":"\/documentation\/cryonet\/defaultinterceptor\/getinterceptorconfig()","title":"func getInterceptorConfig() -> [String : Any]","type":"method"},{"path":"\/documentation\/cryonet\/defaultinterceptor\/handlecustomerror(code:jsondata:httpresponse:iscompleteresponse:)","title":"func handleCustomError(code: Int, jsonData: Data, httpResponse: HTTPURLResponse, isCompleteResponse: Bool) -> Result<Data, Error>","type":"method"},{"path":"\/documentation\/cryonet\/defaultinterceptor\/interceptrequest(_:tokenmanager:)","title":"func interceptRequest(URLRequest, tokenManager: TokenManagerProtocol) async -> URLRequest","type":"method"},{"path":"\/documentation\/cryonet\/defaultinterceptor\/interceptresponse(_:)","title":"func interceptResponse(AFDataResponse<Data?>) -> Result<Data, Error>","type":"method"},{"path":"\/documentation\/cryonet\/defaultinterceptor\/interceptresponsewithcompletedata(_:)","title":"func interceptResponseWithCompleteData(AFDataResponse<Data?>) -> Result<Data, Error>","type":"method"},{"path":"\/documentation\/cryonet\/defaultinterceptor\/isresponsesuccess(json:)","title":"func isResponseSuccess(json: JSON) -> Bool","type":"method"}],"path":"\/documentation\/cryonet\/defaultinterceptor","title":"DefaultInterceptor","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/cryonet\/defaultresponsestructure\/init(codekey:messagekey:datakey:successcode:)","title":"init(codeKey: String, messageKey: String, dataKey: String, successCode: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/cryonet\/defaultresponsestructure\/codekey","title":"let codeKey: String","type":"property"},{"path":"\/documentation\/cryonet\/defaultresponsestructure\/datakey","title":"let dataKey: String","type":"property"},{"path":"\/documentation\/cryonet\/defaultresponsestructure\/messagekey","title":"let messageKey: String","type":"property"},{"path":"\/documentation\/cryonet\/defaultresponsestructure\/successcode","title":"let successCode: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/cryonet\/defaultresponsestructure\/extractdata(from:originaldata:)","title":"func extractData(from: JSON, originalData: Data) -> Result<Data, Error>","type":"method"},{"path":"\/documentation\/cryonet\/defaultresponsestructure\/getconfiginfo()","title":"func getConfigInfo() -> [String : Any]","type":"method"},{"path":"\/documentation\/cryonet\/defaultresponsestructure\/issuccess(json:)","title":"func isSuccess(json: JSON) -> Bool","type":"method"}],"path":"\/documentation\/cryonet\/defaultresponsestructure","title":"DefaultResponseStructure","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/cryonet\/defaulttokenmanager\/init(token:)","title":"init(token: String?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/cryonet\/defaulttokenmanager\/gettoken()","title":"func getToken() async -> String?","type":"method"},{"path":"\/documentation\/cryonet\/defaulttokenmanager\/refreshtoken()","title":"func refreshToken() async -> String?","type":"method"},{"path":"\/documentation\/cryonet\/defaulttokenmanager\/settoken(_:)","title":"func setToken(String) async","type":"method"}],"path":"\/documentation\/cryonet\/defaulttokenmanager","title":"DefaultTokenManager","type":"class"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/cryonet\/downloaditem\/==(_:_:)","title":"static func == (DownloadItem, DownloadItem) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/cryonet\/downloaditem\/init()","title":"init()","type":"init"},{"path":"\/documentation\/cryonet\/downloaditem\/init(filename:filepath:previewpath:)","title":"init(fileName: String?, filePath: String, previewPath: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/cryonet\/downloaditem\/id","title":"let id: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/cryonet\/downloaditem\/fileurl()","title":"func fileURL() -> URL?","type":"method"},{"path":"\/documentation\/cryonet\/downloaditem\/getfilename()","title":"func getFileName() -> String","type":"method"},{"path":"\/documentation\/cryonet\/downloaditem\/getfilepath()","title":"func getFilePath() -> String","type":"method"},{"path":"\/documentation\/cryonet\/downloaditem\/getprogress()","title":"func getProgress() -> Double","type":"method"},{"path":"\/documentation\/cryonet\/downloaditem\/setprogress(_:)","title":"func setProgress(Double)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/cryonet\/downloaditem\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/cryonet\/downloaditem\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/cryonet\/downloaditem\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/cryonet\/downloaditem\/actor-implementations","title":"Actor Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/cryonet\/downloaditem\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/cryonet\/downloaditem\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/cryonet\/downloaditem","title":"DownloadItem","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/cryonet\/downloadresult\/downloaditem","title":"let downLoadItem: DownloadItem","type":"property"},{"path":"\/documentation\/cryonet\/downloadresult\/result","title":"var result: Result<URL?, AFError>","type":"property"}],"path":"\/documentation\/cryonet\/downloadresult","title":"DownloadResult","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/cryonet\/cryoerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/cryonet\/cryoerror","title":"CryoError","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/cryonet\/interceptorconfigprovider\/getinterceptorconfig()","title":"func getInterceptorConfig() -> [String : Any]","type":"method"}],"path":"\/documentation\/cryonet\/interceptorconfigprovider","title":"InterceptorConfigProvider","type":"protocol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/cryonet\/jsonparseable\/init(json:)","title":"init?(json: JSON)","type":"init"}],"path":"\/documentation\/cryonet\/jsonparseable","title":"JSONParseable","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/cryonet\/requestinterceptorprotocol\/interceptrequest(_:tokenmanager:)","title":"func interceptRequest(URLRequest, tokenManager: TokenManagerProtocol) async -> URLRequest","type":"method"},{"path":"\/documentation\/cryonet\/requestinterceptorprotocol\/interceptresponse(_:)","title":"func interceptResponse(AFDataResponse<Data?>) -> Result<Data, Error>","type":"method"},{"path":"\/documentation\/cryonet\/requestinterceptorprotocol\/interceptresponsewithcompletedata(_:)","title":"func interceptResponseWithCompleteData(AFDataResponse<Data?>) -> Result<Data, Error>","type":"method"}],"path":"\/documentation\/cryonet\/requestinterceptorprotocol","title":"RequestInterceptorProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/cryonet\/responsestructureconfig\/codekey","title":"var codeKey: String","type":"property"},{"path":"\/documentation\/cryonet\/responsestructureconfig\/datakey","title":"var dataKey: String","type":"property"},{"path":"\/documentation\/cryonet\/responsestructureconfig\/messagekey","title":"var messageKey: String","type":"property"},{"path":"\/documentation\/cryonet\/responsestructureconfig\/successcode","title":"var successCode: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/cryonet\/responsestructureconfig\/extractdata(from:originaldata:)","title":"func extractData(from: JSON, originalData: Data) -> Result<Data, Error>","type":"method"},{"path":"\/documentation\/cryonet\/responsestructureconfig\/issuccess(json:)","title":"func isSuccess(json: JSON) -> Bool","type":"method"}],"path":"\/documentation\/cryonet\/responsestructureconfig","title":"ResponseStructureConfig","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/cryonet\/tokenmanagerprotocol\/gettoken()","title":"func getToken() async -> String?","type":"method"},{"path":"\/documentation\/cryonet\/tokenmanagerprotocol\/refreshtoken()","title":"func refreshToken() async -> String?","type":"method"},{"path":"\/documentation\/cryonet\/tokenmanagerprotocol\/settoken(_:)","title":"func setToken(String) async","type":"method"}],"path":"\/documentation\/cryonet\/tokenmanagerprotocol","title":"TokenManagerProtocol","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/cryonet\/cryonetconfiguration\/init(basicurl:basicheaders:defaulttimeout:maxconcurrentdownloads:tokenmanager:interceptor:)","title":"init(basicURL: String, basicHeaders: [HTTPHeader], defaultTimeout: TimeInterval, maxConcurrentDownloads: Int, tokenManager: TokenManagerProtocol, interceptor: RequestInterceptorProtocol?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/cryonet\/cryonetconfiguration\/basicheaders","title":"var basicHeaders: [HTTPHeader]","type":"property"},{"path":"\/documentation\/cryonet\/cryonetconfiguration\/basicurl","title":"var basicURL: String","type":"property"},{"path":"\/documentation\/cryonet\/cryonetconfiguration\/defaulttimeout","title":"var defaultTimeout: TimeInterval","type":"property"},{"path":"\/documentation\/cryonet\/cryonetconfiguration\/interceptor","title":"var interceptor: RequestInterceptorProtocol?","type":"property"},{"path":"\/documentation\/cryonet\/cryonetconfiguration\/maxconcurrentdownloads","title":"var maxConcurrentDownloads: Int","type":"property"},{"path":"\/documentation\/cryonet\/cryonetconfiguration\/tokenmanager","title":"var tokenManager: TokenManagerProtocol","type":"property"}],"path":"\/documentation\/cryonet\/cryonetconfiguration","title":"CryoNetConfiguration","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/cryonet\/cryoresult\/request","title":"let request: DataRequest","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/cryonet\/cryoresult\/interceptjson(success:failed:)","title":"func interceptJSON(success: (JSON) -> Void, failed: (String) -> Void) -> CryoResult","type":"method"},{"path":"\/documentation\/cryonet\/cryoresult\/interceptjsonasync()","title":"func interceptJSONAsync() async throws -> JSON","type":"method"},{"path":"\/documentation\/cryonet\/cryoresult\/interceptjsonmodel(parser:success:failed:)","title":"func interceptJSONModel<T>(parser: (JSON) -> T?, success: (T) -> Void, failed: (String) -> Void) -> CryoResult","type":"method"},{"path":"\/documentation\/cryonet\/cryoresult\/interceptjsonmodel(type:keypath:success:failed:)","title":"func interceptJSONModel<T>(type: T.Type, keyPath: String?, success: (T) -> Void, failed: (String) -> Void) -> CryoResult","type":"method"},{"path":"\/documentation\/cryonet\/cryoresult\/interceptjsonmodelarray(keypath:parser:success:failed:)","title":"func interceptJSONModelArray<T>(keyPath: String?, parser: (JSON) -> T?, success: ([T]) -> Void, failed: (String) -> Void) -> CryoResult","type":"method"},{"path":"\/documentation\/cryonet\/cryoresult\/interceptjsonmodelarray(type:keypath:success:failed:)","title":"func interceptJSONModelArray<T>(type: T.Type, keyPath: String?, success: ([T]) -> Void, failed: (String) -> Void) -> CryoResult","type":"method"},{"path":"\/documentation\/cryonet\/cryoresult\/interceptjsonmodelarrayasync(_:keypath:)","title":"func interceptJSONModelArrayAsync<T>(T.Type, keyPath: String?) async throws -> [T]","type":"method"},{"path":"\/documentation\/cryonet\/cryoresult\/interceptjsonmodelarrayasync(keypath:parser:)","title":"func interceptJSONModelArrayAsync<T>(keyPath: String?, parser: (JSON) -> T?) async throws -> [T]","type":"method"},{"path":"\/documentation\/cryonet\/cryoresult\/interceptjsonmodelasync(_:keypath:)","title":"func interceptJSONModelAsync<T>(T.Type, keyPath: String?) async throws -> T","type":"method"},{"path":"\/documentation\/cryonet\/cryoresult\/interceptjsonmodelasync(parser:)","title":"func interceptJSONModelAsync<T>(parser: (JSON) -> T?) async throws -> T","type":"method"},{"path":"\/documentation\/cryonet\/cryoresult\/interceptmodel(type:success:failed:)","title":"func interceptModel<T>(type: T.Type, success: (T) -> Void, failed: (String) -> Void) -> CryoResult","type":"method"},{"path":"\/documentation\/cryonet\/cryoresult\/interceptmodelarray(type:success:failed:)","title":"func interceptModelArray<T>(type: T.Type, success: ([T]) -> Void, failed: (String) -> Void) -> CryoResult","type":"method"},{"path":"\/documentation\/cryonet\/cryoresult\/interceptmodelarrayasync(_:)","title":"func interceptModelArrayAsync<T>(T.Type) async throws -> [T]","type":"method"},{"path":"\/documentation\/cryonet\/cryoresult\/interceptmodelasync(_:)","title":"func interceptModelAsync<T>(T.Type) async throws -> T","type":"method"},{"path":"\/documentation\/cryonet\/cryoresult\/interceptmodelcompletedata(type:success:failed:)","title":"func interceptModelCompleteData<T>(type: T.Type, success: (T) -> Void, failed: (String) -> Void) -> CryoResult","type":"method"},{"path":"\/documentation\/cryonet\/cryoresult\/interceptmodelcompletedataasync(_:)","title":"func interceptModelCompleteDataAsync<T>(T.Type) async throws -> T","type":"method"},{"path":"\/documentation\/cryonet\/cryoresult\/progress(_:)","title":"func progress((Double) -> Void) -> CryoResult","type":"method"},{"path":"\/documentation\/cryonet\/cryoresult\/responsedata(success:failed:)","title":"func responseData(success: (Data) -> Void, failed: (CryoError) -> Void) -> CryoResult","type":"method"},{"path":"\/documentation\/cryonet\/cryoresult\/responsedataasync()","title":"func responseDataAsync() async throws -> Data","type":"method"},{"path":"\/documentation\/cryonet\/cryoresult\/responsejson(success:failed:)","title":"func responseJSON(success: (JSON) -> Void, failed: (CryoError) -> Void) -> CryoResult","type":"method"},{"path":"\/documentation\/cryonet\/cryoresult\/responsejsonasync()","title":"func responseJSONAsync() async throws -> JSON","type":"method"},{"path":"\/documentation\/cryonet\/cryoresult\/responsejsonmodel(parser:success:failed:)","title":"func responseJSONModel<T>(parser: (JSON) -> T?, success: (T) -> Void, failed: (CryoError) -> Void) -> CryoResult","type":"method"},{"path":"\/documentation\/cryonet\/cryoresult\/responsejsonmodel(type:keypath:success:failed:)","title":"func responseJSONModel<T>(type: T.Type, keyPath: String?, success: (T) -> Void, failed: (CryoError) -> Void) -> CryoResult","type":"method"},{"path":"\/documentation\/cryonet\/cryoresult\/responsejsonmodelarray(keypath:parser:success:failed:)","title":"func responseJSONModelArray<T>(keyPath: String?, parser: (JSON) -> T?, success: ([T]) -> Void, failed: (CryoError) -> Void) -> CryoResult","type":"method"},{"path":"\/documentation\/cryonet\/cryoresult\/responsejsonmodelarray(type:keypath:success:failed:)","title":"func responseJSONModelArray<T>(type: T.Type, keyPath: String?, success: ([T]) -> Void, failed: (CryoError) -> Void) -> CryoResult","type":"method"},{"path":"\/documentation\/cryonet\/cryoresult\/responsejsonmodelarrayasync(_:keypath:)","title":"func responseJSONModelArrayAsync<T>(T.Type, keyPath: String?) async throws -> [T]","type":"method"},{"path":"\/documentation\/cryonet\/cryoresult\/responsejsonmodelarrayasync(keypath:parser:)","title":"func responseJSONModelArrayAsync<T>(keyPath: String?, parser: (JSON) -> T?) async throws -> [T]","type":"method"},{"path":"\/documentation\/cryonet\/cryoresult\/responsejsonmodelasync(_:keypath:)","title":"func responseJSONModelAsync<T>(T.Type, keyPath: String?) async throws -> T","type":"method"},{"path":"\/documentation\/cryonet\/cryoresult\/responsejsonmodelasync(parser:)","title":"func responseJSONModelAsync<T>(parser: (JSON) -> T?) async throws -> T","type":"method"},{"path":"\/documentation\/cryonet\/cryoresult\/responsemodel(type:success:failed:)","title":"func responseModel<T>(type: T.Type, success: (T) -> Void, failed: (CryoError) -> Void) -> CryoResult","type":"method"},{"path":"\/documentation\/cryonet\/cryoresult\/responsemodelarray(type:success:failed:)","title":"func responseModelArray<T>(type: T.Type, success: ([T]) -> Void, failed: (CryoError) -> Void) -> CryoResult","type":"method"},{"path":"\/documentation\/cryonet\/cryoresult\/responsemodelarrayasync(_:)","title":"func responseModelArrayAsync<T>(T.Type) async throws -> [T]","type":"method"},{"path":"\/documentation\/cryonet\/cryoresult\/responsemodelasync(_:)","title":"func responseModelAsync<T>(T.Type) async throws -> T","type":"method"}],"path":"\/documentation\/cryonet\/cryoresult","title":"CryoResult","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/cryonet\/customparameterencoding\/init(encoding:)","title":"init(encoding: (any URLRequestConvertible, Parameters?) throws -> URLRequest)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/cryonet\/customparameterencoding\/encode(_:with:)","title":"func encode(any URLRequestConvertible, with: Parameters?) throws -> URLRequest","type":"method"}],"path":"\/documentation\/cryonet\/customparameterencoding","title":"CustomParameterEncoding","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/cryonet\/downloadmodel\/init(savepath:models:)","title":"init(savePath: String?, models: [DownloadItem])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/cryonet\/downloadmodel\/models","title":"var models: [DownloadItem]","type":"property"},{"path":"\/documentation\/cryonet\/downloadmodel\/savepath","title":"var savePath: String?","type":"property"},{"path":"\/documentation\/cryonet\/downloadmodel\/savepathurl","title":"var savePathURL: URL?","type":"property"}],"path":"\/documentation\/cryonet\/downloadmodel","title":"DownloadModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/cryonet\/jsonstring\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/cryonet\/jsonstring\/init(wrappedvalue:)","title":"init(wrappedValue: T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/cryonet\/jsonstring\/wrappedvalue","title":"var wrappedValue: T","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/cryonet\/jsonstring\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/cryonet\/jsonstring","title":"JSONString","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/cryonet\/requestmodel\/init(path:applybasicurl:method:encoding:overtime:explain:)","title":"init(path: String, applyBasicURL: Bool, method: HTTPMethod, encoding: ParameterEncoder, overtime: Double, explain: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/cryonet\/requestmodel\/fullurl(with:)","title":"func fullURL(with: String) -> String","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/cryonet\/requestmodel\/streamhandler","title":"RequestModel.StreamHandler","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/cryonet\/requestmodel\/streamrequest(path:applybasicurl:method:overtime:explain:)","title":"static func streamRequest(path: String, applyBasicURL: Bool, method: HTTPMethod, overtime: Double, explain: String) -> RequestModel","type":"method"}],"path":"\/documentation\/cryonet\/requestmodel","title":"RequestModel","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/cryonet\/uploaddata\/==(_:_:)","title":"static func == (UploadData, UploadData) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/cryonet\/uploaddata\/init(file:name:filename:)","title":"init(file: fileType, name: String, fileName: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/cryonet\/uploaddata\/file","title":"var file: fileType","type":"property"},{"path":"\/documentation\/cryonet\/uploaddata\/filename","title":"var fileName: String?","type":"property"},{"path":"\/documentation\/cryonet\/uploaddata\/id","title":"let id: UUID","type":"property"},{"path":"\/documentation\/cryonet\/uploaddata\/name","title":"var name: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/cryonet\/uploaddata\/filetype\/filedata(_:)","title":"case fileData(Data?)","type":"case"},{"path":"\/documentation\/cryonet\/uploaddata\/filetype\/fileurl(_:)","title":"case fileURL(URL?)","type":"case"}],"path":"\/documentation\/cryonet\/uploaddata\/filetype","title":"UploadData.fileType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/cryonet\/uploaddata\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/cryonet\/uploaddata\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/cryonet\/uploaddata","title":"UploadData","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/cryonet\/parameterencoder\/custom(_:)","title":"case custom((any URLRequestConvertible, Parameters?) throws -> URLRequest)","type":"case"},{"path":"\/documentation\/cryonet\/parameterencoder\/jsondefault","title":"case jsonDefault","type":"case"},{"path":"\/documentation\/cryonet\/parameterencoder\/jsonprettyprinted","title":"case jsonPrettyPrinted","type":"case"},{"path":"\/documentation\/cryonet\/parameterencoder\/urldefault","title":"case urlDefault","type":"case"},{"path":"\/documentation\/cryonet\/parameterencoder\/urlhttpbody","title":"case urlHttpBody","type":"case"},{"path":"\/documentation\/cryonet\/parameterencoder\/urlquerystring","title":"case urlQueryString","type":"case"}],"path":"\/documentation\/cryonet\/parameterencoder","title":"ParameterEncoder","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/cryonet\/streamdataitem\/data(_:)","title":"case data(Data)","type":"case"},{"path":"\/documentation\/cryonet\/streamdataitem\/decodable(_:)","title":"case decodable(any Decodable)","type":"case"},{"path":"\/documentation\/cryonet\/streamdataitem\/error(_:)","title":"case error(Error)","type":"case"},{"path":"\/documentation\/cryonet\/streamdataitem\/json(_:)","title":"case json(JSON)","type":"case"},{"path":"\/documentation\/cryonet\/streamdataitem\/model(_:)","title":"case model(any JSONParseable)","type":"case"},{"path":"\/documentation\/cryonet\/streamdataitem\/sseevent(_:)","title":"case sseEvent(String)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/cryonet\/streamdataitem\/datavalue","title":"var dataValue: Data?","type":"property"},{"path":"\/documentation\/cryonet\/streamdataitem\/decodablevalue","title":"var decodableValue: (any Decodable)?","type":"property"},{"path":"\/documentation\/cryonet\/streamdataitem\/errorvalue","title":"var errorValue: Error?","type":"property"},{"path":"\/documentation\/cryonet\/streamdataitem\/jsonvalue","title":"var jsonValue: JSON?","type":"property"},{"path":"\/documentation\/cryonet\/streamdataitem\/modelvalue","title":"var modelValue: (any JSONParseable)?","type":"property"},{"path":"\/documentation\/cryonet\/streamdataitem\/ssevalue","title":"var sseValue: String?","type":"property"}],"path":"\/documentation\/cryonet\/streamdataitem","title":"StreamDataItem","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/cryonet\/swiftyjsonutils\/datatoprettyjsonstring(_:)","title":"static func dataToPrettyJSONString(Data) -> String","type":"method"},{"path":"\/documentation\/cryonet\/swiftyjsonutils\/decodefromdata(_:from:)","title":"static func decodeFromData<T>(T.Type, from: Data) -> T?","type":"method"},{"path":"\/documentation\/cryonet\/swiftyjsonutils\/decodefromjson(_:from:)","title":"static func decodeFromJson<T>(T.Type, from: String) -> T?","type":"method"},{"path":"\/documentation\/cryonet\/swiftyjsonutils\/decodefromobject(_:from:)","title":"static func decodeFromObject<T>(T.Type, from: Any) -> T?","type":"method"},{"path":"\/documentation\/cryonet\/swiftyjsonutils\/encodetodata(_:prettyprinted:)","title":"static func encodeToData<T>(T, prettyPrinted: Bool) -> Data?","type":"method"},{"path":"\/documentation\/cryonet\/swiftyjsonutils\/encodetodictionaries(_:)","title":"static func encodeToDictionaries<T>([T]) -> [[String : Any]]?","type":"method"},{"path":"\/documentation\/cryonet\/swiftyjsonutils\/encodetodictionary(_:)","title":"static func encodeToDictionary<T>(T) -> [String : Any]?","type":"method"},{"path":"\/documentation\/cryonet\/swiftyjsonutils\/encodetostring(_:prettyprinted:)","title":"static func encodeToString<T>(T, prettyPrinted: Bool) -> String?","type":"method"},{"path":"\/documentation\/cryonet\/swiftyjsonutils\/normalize(_:)","title":"static func normalize(String) -> String?","type":"method"},{"path":"\/documentation\/cryonet\/swiftyjsonutils\/toprettyjsonstring(_:)","title":"static func toPrettyJSONString(JSON) -> String","type":"method"}],"path":"\/documentation\/cryonet\/swiftyjsonutils","title":"SwiftyJSONUtils","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/cryonet\/swiftyjson\/json\/array(_:defaultvalue:)","title":"func array(String, defaultValue: [JSON]) -> [JSON]","type":"method"},{"path":"\/documentation\/cryonet\/swiftyjson\/json\/bool(_:defaultvalue:)","title":"func bool(String, defaultValue: Bool) -> Bool","type":"method"},{"path":"\/documentation\/cryonet\/swiftyjson\/json\/dictionary(_:defaultvalue:)","title":"func dictionary(String, defaultValue: [String : JSON]) -> [String : JSON]","type":"method"},{"path":"\/documentation\/cryonet\/swiftyjson\/json\/double(_:defaultvalue:)","title":"func double(String, defaultValue: Double) -> Double","type":"method"},{"path":"\/documentation\/cryonet\/swiftyjson\/json\/int(_:defaultvalue:)","title":"func int(String, defaultValue: Int) -> Int","type":"method"},{"path":"\/documentation\/cryonet\/swiftyjson\/json\/optionalarray(_:)","title":"func optionalArray(String) -> [JSON]?","type":"method"},{"path":"\/documentation\/cryonet\/swiftyjson\/json\/optionalbool(_:)","title":"func optionalBool(String) -> Bool?","type":"method"},{"path":"\/documentation\/cryonet\/swiftyjson\/json\/optionaldictionary(_:)","title":"func optionalDictionary(String) -> [String : JSON]?","type":"method"},{"path":"\/documentation\/cryonet\/swiftyjson\/json\/optionaldouble(_:)","title":"func optionalDouble(String) -> Double?","type":"method"},{"path":"\/documentation\/cryonet\/swiftyjson\/json\/optionalint(_:)","title":"func optionalInt(String) -> Int?","type":"method"},{"path":"\/documentation\/cryonet\/swiftyjson\/json\/optionalstring(_:)","title":"func optionalString(String) -> String?","type":"method"},{"path":"\/documentation\/cryonet\/swiftyjson\/json\/parsenestedjson(_:)","title":"func parseNestedJSON(String) -> JSON","type":"method"},{"path":"\/documentation\/cryonet\/swiftyjson\/json\/string(_:defaultvalue:)","title":"func string(String, defaultValue: String) -> String","type":"method"},{"path":"\/documentation\/cryonet\/swiftyjson\/json\/tomodel(_:)","title":"func toModel<T>(T.Type) -> T?","type":"method"},{"path":"\/documentation\/cryonet\/swiftyjson\/json\/tomodel(_:keypath:)","title":"func toModel<T>(T.Type, keyPath: String?) -> T?","type":"method"},{"path":"\/documentation\/cryonet\/swiftyjson\/json\/tomodel(parser:)","title":"func toModel<T>(parser: (JSON) -> T?) -> T?","type":"method"},{"path":"\/documentation\/cryonet\/swiftyjson\/json\/tomodelarray(_:)","title":"func toModelArray<T>(T.Type) -> [T]?","type":"method"},{"path":"\/documentation\/cryonet\/swiftyjson\/json\/tomodelarray(_:keypath:)","title":"func toModelArray<T>(T.Type, keyPath: String?) -> [T]","type":"method"},{"path":"\/documentation\/cryonet\/swiftyjson\/json\/tomodelarray(keypath:parser:)","title":"func toModelArray<T>(keyPath: String?, parser: (JSON) -> T?) -> [T]","type":"method"},{"path":"\/documentation\/cryonet\/swiftyjson\/json\/toprettystring()","title":"func toPrettyString() -> String","type":"method"}],"path":"\/documentation\/cryonet\/swiftyjson\/json","title":"JSON","type":"extension"}],"path":"\/documentation\/cryonet\/swiftyjson","title":"SwiftyJSON","type":"extension"}],"path":"\/documentation\/cryonet","title":"CryoNet","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}